#include "Utils.hpp"

void split(const std::string& str, std::vector<std::string>& tokens, const std::string &delimiters)
{
	size_t pos, lastPos = 0, length = str.length();

	while (lastPos < length + 1)
	{
		pos = str.find_first_of(delimiters, lastPos);
		if (pos == std::string::npos)
			pos = length;
		if (pos != lastPos)
			tokens.push_back(std::string(str.data() + lastPos, pos - lastPos));
		lastPos = pos + 1;
	}
}

std::string codePhrase(const int &code)
{
    switch (code)
    {
        case 100: return "Continue";
        case 101: return "Switching Protocols";
        case 102: return "Processing";
        case 103: return "Early Hints";
        case 200: return "OK";
        case 201: return "Created";
        case 202: return "Accepted";
        case 203: return "Non-Authoritative Information";
        case 204: return "No Content";
        case 205: return "Reset Content";
        case 206: return "Partial Content";
        case 207: return "Multi-Status";
        case 208: return "Already Reported";
        case 226: return "IM Used";
        case 300: return "Multiple Choices";
        case 301: return "Moved Permanently";
        case 302: return "Found";
        case 303: return "See Other";
        case 304: return "Not Modified";
        case 305: return "Use Proxy";
        case 307: return "Temporary Redirect";
        case 308: return "Permanent Redirect";
        case 400: return "Bad Request";
        case 401: return "Unauthorized";
        case 402: return "Payment Required";
        case 403: return "Forbidden";
        case 404: return "Not Found";
        case 405: return "Method Not Allowed";
        case 406: return "Not Acceptable";
        case 407: return "Proxy Authentication Required";
        case 408: return "Request Timeout";
        case 409: return "Conflict";
        case 410: return "Gone";
        case 411: return "Length Required";
        case 412: return "Precondition Failed";
        case 413: return "Content Too Large";
        case 414: return "URI Too Long";
        case 415: return "Unsupported Media Type";
        case 416: return "Range Not Satisfiable";
        case 417: return "Expectation Failed";
        case 418: return "I'm a teapot"; // wtf?
        case 421: return "Misdirected Request";
        case 422: return "Unprocessable Content";
        case 423: return "Locked";
        case 424: return "Failed Dependency";
        case 425: return "Too Early";
        case 426: return "Upgrade Required";
        case 428: return "Precondition Required";
        case 429: return "Too Many Requests";
        case 431: return "Request Header Fields Too Large";
        case 451: return "Unavailable For Legal Reasons";
        case 500: return "Internal Server Error";
        case 501: return "Not Implemented";
        case 502: return "Bad Gateway";
        case 503: return "Service Unavailable";
        case 504: return "Gateway Timeout";
        case 505: return "HTTP Version Not Supported";
        case 506: return "Variant Also Negotiates";
        case 507: return "Insufficient Storage";
        case 508: return "Loop Detected";
        case 510: return "Not Extended";
        case 511: return "Network Authentication Required";

        default: return std::string();
    }
}

std::string getDate(void)
{
    std::string     ret;
	char			buffer[100];
	struct timeval	tv;
	struct tm		*tm;

	gettimeofday(&tv, NULL);
	tm = gmtime(&tv.tv_sec);
	strftime(buffer, 100, "%a, %d %b %Y %H:%M:%S GMT", tm);
	return std::string(buffer);
}

std::string itos(int n)
{
    std::stringstream out;
    out << n;
    return out.str();
}

long getFileSize(std::string filename)
{
    struct stat stat_buf;
    int rc = stat(filename.c_str(), &stat_buf);
    return rc == 0 ? stat_buf.st_size : -1;
}

void setMimeTypes(void)
{ 
    mimeTypes["3gpp"] = "audio/3gpp";
    mimeTypes["jpm"] = "video/jpm";
    mimeTypes["mp3"] = "audio/mp3";
    mimeTypes["rtf"] = "text/rtf";
    mimeTypes["wav"] = "audio/wave";
    mimeTypes["xml"] = "text/xml";
    mimeTypes["3g2"] = "video/3gpp2";
    mimeTypes["3gp"] = "video/3gpp";
    mimeTypes["3gpp"] = "video/3gpp";
    mimeTypes["ac"] = "application/pkix-attr-cert";
    mimeTypes["adp"] = "audio/adpcm";
    mimeTypes["ai"] = "application/postscript";
    mimeTypes["apng"] = "image/apng";
    mimeTypes["appcache"] = "text/cache-manifest";
    mimeTypes["asc"] = "application/pgp-signature";
    mimeTypes["atom"] = "application/atom+xml";
    mimeTypes["atomcat"] = "application/atomcat+xml";
    mimeTypes["atomsvc"] = "application/atomsvc+xml";
    mimeTypes["au"] = "audio/basic";
    mimeTypes["aw"] = "application/applixware";
    mimeTypes["bdoc"] = "application/bdoc";
    mimeTypes["bin"] = "application/octet-stream";
    mimeTypes["bmp"] = "image/bmp";
    mimeTypes["bpk"] = "application/octet-stream";
    mimeTypes["buffer"] = "application/octet-stream";
    mimeTypes["ccxml"] = "application/ccxml+xml";
    mimeTypes["cdmia"] = "application/cdmi-capability";
    mimeTypes["cdmic"] = "application/cdmi-container";
    mimeTypes["cdmid"] = "application/cdmi-domain";
    mimeTypes["cdmio"] = "application/cdmi-object";
    mimeTypes["cdmiq"] = "application/cdmi-queue";
    mimeTypes["cer"] = "application/pkix-cert";
    mimeTypes["cgm"] = "image/cgm";
    mimeTypes["class"] = "application/java-vm";
    mimeTypes["coffee"] = "text/coffeescript";
    mimeTypes["conf"] = "text/plain";
    mimeTypes["cpt"] = "application/mac-compactpro";
    mimeTypes["crl"] = "application/pkix-crl";
    mimeTypes["css"] = "text/css";
    mimeTypes["csv"] = "text/csv";
    mimeTypes["cu"] = "application/cu-seeme";
    mimeTypes["davmount"] = "application/davmount+xml";
    mimeTypes["dbk"] = "application/docbook+xml";
    mimeTypes["deb"] = "application/octet-stream";
    mimeTypes["def"] = "text/plain";
    mimeTypes["deploy"] = "application/octet-stream";
    mimeTypes["disposition-notification"] = "message/disposition-notification";
    mimeTypes["dist"] = "application/octet-stream";
    mimeTypes["distz"] = "application/octet-stream";
    mimeTypes["dll"] = "application/octet-stream";
    mimeTypes["dmg"] = "application/octet-stream";
    mimeTypes["dms"] = "application/octet-stream";
    mimeTypes["doc"] = "application/msword";
    mimeTypes["dot"] = "application/msword";
    mimeTypes["drle"] = "image/dicom-rle";
    mimeTypes["dssc"] = "application/dssc+der";
    mimeTypes["dtd"] = "application/xml-dtd";
    mimeTypes["dump"] = "application/octet-stream";
    mimeTypes["ear"] = "application/java-archive";
    mimeTypes["ecma"] = "application/ecmascript";
    mimeTypes["elc"] = "application/octet-stream";
    mimeTypes["emf"] = "image/emf";
    mimeTypes["eml"] = "message/rfc822";
    mimeTypes["emma"] = "application/emma+xml";
    mimeTypes["eps"] = "application/postscript";
    mimeTypes["epub"] = "application/epub+zip";
    mimeTypes["es"] = "application/ecmascript";
    mimeTypes["exe"] = "application/octet-stream";
    mimeTypes["exi"] = "application/exi";
    mimeTypes["exr"] = "image/aces";
    mimeTypes["ez"] = "application/andrew-inset";
    mimeTypes["fits"] = "image/fits";
    mimeTypes["g3"] = "image/g3fax";
    mimeTypes["gbr"] = "application/rpki-ghostbusters";
    mimeTypes["geojson"] = "application/geo+json";
    mimeTypes["gif"] = "image/gif";
    mimeTypes["glb"] = "model/gltf-binary";
    mimeTypes["gltf"] = "model/gltf+json";
    mimeTypes["gml"] = "application/gml+xml";
    mimeTypes["gpx"] = "application/gpx+xml";
    mimeTypes["gram"] = "application/srgs";
    mimeTypes["grxml"] = "application/srgs+xml";
    mimeTypes["gxf"] = "application/gxf";
    mimeTypes["gz"] = "application/gzip";
    mimeTypes["h261"] = "video/h261";
    mimeTypes["h263"] = "video/h263";
    mimeTypes["h264"] = "video/h264";
    mimeTypes["heic"] = "image/heic";
    mimeTypes["heics"] = "image/heic-sequence";
    mimeTypes["heif"] = "image/heif";
    mimeTypes["heifs"] = "image/heif-sequence";
    mimeTypes["hjson"] = "application/hjson";
    mimeTypes["hlp"] = "application/winhlp";
    mimeTypes["hqx"] = "application/mac-binhex40";
    mimeTypes["htm"] = "text/html";
    mimeTypes["html"] = "text/html";
    mimeTypes["ics"] = "text/calendar";
    mimeTypes["ief"] = "image/ief";
    mimeTypes["ifb"] = "text/calendar";
    mimeTypes["iges"] = "model/iges";
    mimeTypes["igs"] = "model/iges";
    mimeTypes["img"] = "application/octet-stream";
    mimeTypes["in"] = "text/plain";
    mimeTypes["ini"] = "text/plain";
    mimeTypes["ink"] = "application/inkml+xml";
    mimeTypes["inkml"] = "application/inkml+xml";
    mimeTypes["ipfix"] = "application/ipfix";
    mimeTypes["iso"] = "application/octet-stream";
    mimeTypes["jade"] = "text/jade";
    mimeTypes["jar"] = "application/java-archive";
    mimeTypes["jls"] = "image/jls";
    mimeTypes["jp2"] = "image/jp2";
    mimeTypes["jpe"] = "image/jpeg";
    mimeTypes["jpeg"] = "image/jpeg";
    mimeTypes["jpf"] = "image/jpx";
    mimeTypes["jpg"] = "image/jpeg";
    mimeTypes["jpg2"] = "image/jp2";
    mimeTypes["jpgm"] = "video/jpm";
    mimeTypes["jpgv"] = "video/jpeg";
    mimeTypes["jpm"] = "image/jpm";
    mimeTypes["jpx"] = "image/jpx";
    mimeTypes["js"] = "application/javascript";
    mimeTypes["json"] = "application/json";
    mimeTypes["json5"] = "application/json5";
    mimeTypes["jsonld"] = "application/ld+json";
    mimeTypes["jsonml"] = "application/jsonml+json";
    mimeTypes["jsx"] = "text/jsx";
    mimeTypes["kar"] = "audio/midi";
    mimeTypes["ktx"] = "image/ktx";
    mimeTypes["less"] = "text/less";
    mimeTypes["list"] = "text/plain";
    mimeTypes["litcoffee"] = "text/coffeescript";
    mimeTypes["log"] = "text/plain";
    mimeTypes["lostxml"] = "application/lost+xml";
    mimeTypes["lrf"] = "application/octet-stream";
    mimeTypes["m1v"] = "video/mpeg";
    mimeTypes["m21"] = "application/mp21";
    mimeTypes["m2a"] = "audio/mpeg";
    mimeTypes["m2v"] = "video/mpeg";
    mimeTypes["m3a"] = "audio/mpeg";
    mimeTypes["m4a"] = "audio/mp4";
    mimeTypes["m4p"] = "application/mp4";
    mimeTypes["ma"] = "application/mathematica";
    mimeTypes["mads"] = "application/mads+xml";
    mimeTypes["man"] = "text/troff";
    mimeTypes["manifest"] = "text/cache-manifest";
    mimeTypes["map"] = "application/json";
    mimeTypes["mar"] = "application/octet-stream";
    mimeTypes["markdown"] = "text/markdown";
    mimeTypes["mathml"] = "application/mathml+xml";
    mimeTypes["mb"] = "application/mathematica";
    mimeTypes["mbox"] = "application/mbox";
    mimeTypes["md"] = "text/markdown";
    mimeTypes["me"] = "text/troff";
    mimeTypes["mesh"] = "model/mesh";
    mimeTypes["meta4"] = "application/metalink4+xml";
    mimeTypes["metalink"] = "application/metalink+xml";
    mimeTypes["mets"] = "application/mets+xml";
    mimeTypes["mft"] = "application/rpki-manifest";
    mimeTypes["mid"] = "audio/midi";
    mimeTypes["midi"] = "audio/midi";
    mimeTypes["mime"] = "message/rfc822";
    mimeTypes["mj2"] = "video/mj2";
    mimeTypes["mjp2"] = "video/mj2";
    mimeTypes["mjs"] = "application/javascript";
    mimeTypes["mml"] = "text/mathml";
    mimeTypes["mods"] = "application/mods+xml";
    mimeTypes["mov"] = "video/quicktime";
    mimeTypes["mp2"] = "audio/mpeg";
    mimeTypes["mp21"] = "application/mp21";
    mimeTypes["mp2a"] = "audio/mpeg";
    mimeTypes["mp3"] = "audio/mpeg";
    mimeTypes["mp4"] = "video/mp4";
    mimeTypes["mp4a"] = "audio/mp4";
    mimeTypes["mp4s"] = "application/mp4";
    mimeTypes["mp4v"] = "video/mp4";
    mimeTypes["mpd"] = "application/dash+xml";
    mimeTypes["mpe"] = "video/mpeg";
    mimeTypes["mpeg"] = "video/mpeg";
    mimeTypes["mpg"] = "video/mpeg";
    mimeTypes["mpg4"] = "video/mp4";
    mimeTypes["mpga"] = "audio/mpeg";
    mimeTypes["mrc"] = "application/marc";
    mimeTypes["mrcx"] = "application/marcxml+xml";
    mimeTypes["ms"] = "text/troff";
    mimeTypes["mscml"] = "application/mediaservercontrol+xml";
    mimeTypes["msh"] = "model/mesh";
    mimeTypes["msi"] = "application/octet-stream";
    mimeTypes["msm"] = "application/octet-stream";
    mimeTypes["msp"] = "application/octet-stream";
    mimeTypes["mxf"] = "application/mxf";
    mimeTypes["mxml"] = "application/xv+xml";
    mimeTypes["n3"] = "text/n3";
    mimeTypes["nb"] = "application/mathematica";
    mimeTypes["oda"] = "application/oda";
    mimeTypes["oga"] = "audio/ogg";
    mimeTypes["ogg"] = "audio/ogg";
    mimeTypes["ogv"] = "video/ogg";
    mimeTypes["ogx"] = "application/ogg";
    mimeTypes["omdoc"] = "application/omdoc+xml";
    mimeTypes["onepkg"] = "application/onenote";
    mimeTypes["onetmp"] = "application/onenote";
    mimeTypes["onetoc"] = "application/onenote";
    mimeTypes["onetoc2"] = "application/onenote";
    mimeTypes["opf"] = "application/oebps-package+xml";
    mimeTypes["otf"] = "font/otf";
    mimeTypes["owl"] = "application/rdf+xml";
    mimeTypes["oxps"] = "application/oxps";
    mimeTypes["p10"] = "application/pkcs10";
    mimeTypes["p7c"] = "application/pkcs7-mime";
    mimeTypes["p7m"] = "application/pkcs7-mime";
    mimeTypes["p7s"] = "application/pkcs7-signature";
    mimeTypes["p8"] = "application/pkcs8";
    mimeTypes["pdf"] = "application/pdf";
    mimeTypes["pfr"] = "application/font-tdpfr";
    mimeTypes["pgp"] = "application/pgp-encrypted";
    mimeTypes["pkg"] = "application/octet-stream";
    mimeTypes["pki"] = "application/pkixcmp";
    mimeTypes["pkipath"] = "application/pkix-pkipath";
    mimeTypes["pls"] = "application/pls+xml";
    mimeTypes["png"] = "image/png";
    mimeTypes["prf"] = "application/pics-rules";
    mimeTypes["ps"] = "application/postscript";
    mimeTypes["pskcxml"] = "application/pskc+xml";
    mimeTypes["qt"] = "video/quicktime";
    mimeTypes["raml"] = "application/raml+yaml";
    mimeTypes["rdf"] = "application/rdf+xml";
    mimeTypes["rif"] = "application/reginfo+xml";
    mimeTypes["rl"] = "application/resource-lists+xml";
    mimeTypes["rld"] = "application/resource-lists-diff+xml";
    mimeTypes["rmi"] = "audio/midi";
    mimeTypes["rnc"] = "application/relax-ng-compact-syntax";
    mimeTypes["rng"] = "application/xml";
    mimeTypes["roa"] = "application/rpki-roa";
    mimeTypes["roff"] = "text/troff";
    mimeTypes["rq"] = "application/sparql-query";
    mimeTypes["rs"] = "application/rls-services+xml";
    mimeTypes["rsd"] = "application/rsd+xml";
    mimeTypes["rss"] = "application/rss+xml";
    mimeTypes["rtf"] = "application/rtf";
    mimeTypes["rtx"] = "text/richtext";
    mimeTypes["s3m"] = "audio/s3m";
    mimeTypes["sbml"] = "application/sbml+xml";
    mimeTypes["scq"] = "application/scvp-cv-request";
    mimeTypes["scs"] = "application/scvp-cv-response";
    mimeTypes["sdp"] = "application/sdp";
    mimeTypes["ser"] = "application/java-serialized-object";
    mimeTypes["setpay"] = "application/set-payment-initiation";
    mimeTypes["setreg"] = "application/set-registration-initiation";
    mimeTypes["sgi"] = "image/sgi";
    mimeTypes["sgm"] = "text/sgml";
    mimeTypes["sgml"] = "text/sgml";
    mimeTypes["shex"] = "text/shex";
    mimeTypes["shf"] = "application/shf+xml";
    mimeTypes["shtml"] = "text/html";
    mimeTypes["sig"] = "application/pgp-signature";
    mimeTypes["sil"] = "audio/silk";
    mimeTypes["silo"] = "model/mesh";
    mimeTypes["slim"] = "text/slim";
    mimeTypes["slm"] = "text/slim";
    mimeTypes["smi"] = "application/smil+xml";
    mimeTypes["smil"] = "application/smil+xml";
    mimeTypes["snd"] = "audio/basic";
    mimeTypes["so"] = "application/octet-stream";
    mimeTypes["spp"] = "application/scvp-vp-response";
    mimeTypes["spq"] = "application/scvp-vp-request";
    mimeTypes["spx"] = "audio/ogg";
    mimeTypes["sru"] = "application/sru+xml";
    mimeTypes["srx"] = "application/sparql-results+xml";
    mimeTypes["ssdl"] = "application/ssdl+xml";
    mimeTypes["ssml"] = "application/ssml+xml";
    mimeTypes["stk"] = "application/hyperstudio";
    mimeTypes["styl"] = "text/stylus";
    mimeTypes["stylus"] = "text/stylus";
    mimeTypes["svg"] = "image/svg+xml";
    mimeTypes["svgz"] = "image/svg+xml";
    mimeTypes["t"] = "text/troff";
    mimeTypes["t38"] = "image/t38";
    mimeTypes["tei"] = "application/tei+xml";
    mimeTypes["teicorpus"] = "application/tei+xml";
    mimeTypes["text"] = "text/plain";
    mimeTypes["tfi"] = "application/thraud+xml";
    mimeTypes["tfx"] = "image/tiff-fx";
    mimeTypes["tif"] = "image/tiff";
    mimeTypes["tiff"] = "image/tiff";
    mimeTypes["tr"] = "text/troff";
    mimeTypes["ts"] = "video/mp2t";
    mimeTypes["tsd"] = "application/timestamped-data";
    mimeTypes["tsv"] = "text/tab-separated-values";
    mimeTypes["ttc"] = "font/collection";
    mimeTypes["ttf"] = "font/ttf";
    mimeTypes["ttl"] = "text/turtle";
    mimeTypes["txt"] = "text/plain";
    mimeTypes["u8dsn"] = "message/global-delivery-status";
    mimeTypes["u8hdr"] = "message/global-headers";
    mimeTypes["u8mdn"] = "message/global-disposition-notification";
    mimeTypes["u8msg"] = "message/global";
    mimeTypes["uri"] = "text/uri-list";
    mimeTypes["uris"] = "text/uri-list";
    mimeTypes["urls"] = "text/uri-list";
    mimeTypes["vcard"] = "text/vcard";
    mimeTypes["vrml"] = "model/vrml";
    mimeTypes["vtt"] = "text/vtt";
    mimeTypes["vxml"] = "application/voicexml+xml";
    mimeTypes["war"] = "application/java-archive";
    mimeTypes["wasm"] = "application/wasm";
    mimeTypes["wav"] = "audio/wav";
    mimeTypes["weba"] = "audio/webm";
    mimeTypes["webm"] = "video/webm";
    mimeTypes["webmanifest"] = "application/manifest+json";
    mimeTypes["webp"] = "image/webp";
    mimeTypes["wgt"] = "application/widget";
    mimeTypes["wmf"] = "image/wmf";
    mimeTypes["woff"] = "font/woff";
    mimeTypes["woff2"] = "font/woff2";
    mimeTypes["wrl"] = "model/vrml";
    mimeTypes["wsdl"] = "application/wsdl+xml";
    mimeTypes["wspolicy"] = "application/wspolicy+xml";
    mimeTypes["x3d"] = "model/x3d+xml";
    mimeTypes["x3db"] = "model/x3d+binary";
    mimeTypes["x3dbz"] = "model/x3d+binary";
    mimeTypes["x3dv"] = "model/x3d+vrml";
    mimeTypes["x3dvz"] = "model/x3d+vrml";
    mimeTypes["x3dz"] = "model/x3d+xml";
    mimeTypes["xaml"] = "application/xaml+xml";
    mimeTypes["xdf"] = "application/xcap-diff+xml";
    mimeTypes["xdssc"] = "application/dssc+xml";
    mimeTypes["xenc"] = "application/xenc+xml";
    mimeTypes["xer"] = "application/patch-ops-error+xml";
    mimeTypes["xht"] = "application/xhtml+xml";
    mimeTypes["xhtml"] = "application/xhtml+xml";
    mimeTypes["xhvml"] = "application/xv+xml";
    mimeTypes["xm"] = "audio/xm";
    mimeTypes["xml"] = "application/xml";
    mimeTypes["xop"] = "application/xop+xml";
    mimeTypes["xpl"] = "application/xproc+xml";
    mimeTypes["xsd"] = "application/xml";
    mimeTypes["xsl"] = "application/xml";
    mimeTypes["xslt"] = "application/xslt+xml";
    mimeTypes["xspf"] = "application/xspf+xml";
    mimeTypes["xvm"] = "application/xv+xml";
    mimeTypes["xvml"] = "application/xv+xml";
    mimeTypes["yaml"] = "text/yaml";
    mimeTypes["yang"] = "application/yang";
    mimeTypes["yin"] = "application/yin+xml";
    mimeTypes["yml"] = "text/yaml";
    mimeTypes["zip"] = "application/zip";
}
